---
mainfont: serif;
execute:
  echo: false
  warning: false
  freeze: true
bibliography: references.bib
---

```{r}
library(dplyr)
library(ggplot2)
library(haven)
library(sf)
library(vctrs)
library(base)
library(tidycensus)
library(tigris)
library(gdata)
library(scales)
library(spatialreg)
library(spdep)
library(rlist)
library(gdata)
library(tidyr)
library(stringr)
library(raster)
library(FedData)
library(rasterVis)
library(raster)
library(sp)
library(rgdal)
library(reshape2)
library(treemapify)
library(ggplot2)
library(kableExtra)
library(animation)
library(scales)
library(ggplot2)
library(maptools)
library(maps)
library(cowplot)
library(FedData)
library(rasterVis)
library(readxl)
library(ggpattern)
library(scales)
library(gridExtra)
library(grid)
library(ggpubr)
library(ggridges)
```

## Introduction

Air pollution's adverse impact on respiratory health is a widely known issue. The World Health Organization acknowledged the significance of this risk factor in its 68th conference, where they note that "exposure to air pollutants, including fine particulate matter, is a leading risk factor for noncommunicable diseases in adults, including ischaemic heart disease, stroke, chronic obstructive pulmonary disease, asthma and cancer, and poses a considerable health threat to current and future generations," [-@worldhealthassembly2015]. Further, numerous studies have substantiated the risk that air pollution poses to population health, many linking air pollution to industrial areas and urbanization. On the other hand, other research recognize the variable impacts of interactions between urban built environments, air pollution, and health. This group of research considers factors ranging from the built environment's impact on promoting walking and other forms of exercise, to the impact of exercising in areas with high levels of air pollution, and to the role that urban greenspace plays in reducing air pollution [@hankey2012], [@lee2022],[@alcock2017]. The study of air pollution's impact of respiratory health is complicated by the interactions between the natural environment, built environment, and human behavior. Therefore, approaching the problem using spatial methods may reveal prevailing patterns that result from the exchanges between all factors. This paper attempts to create a spatial model that predicts respiratory health patterns using air pollution and land cover data in the United States. By incorporating land cover data, I attempt to consider human interactions with the natural and built environment, and its impact on respiratory health, through direct or indirect means.

Associations between land use and health impacts have also been studied in the past, with varying findings. Wang and colleagues found a negative correlation between Chronic Obstructive Pulmonary Disease (COPD) mortality and land use mix in most neighborhoods in China's Jing'an district except for northwest areas. In northwest neighborhoods, COPD mortality was positively correlated with land use mix [@wang2019 pp.7]. Other studies, such as Alcock and colleagues' analysis of asthma hospitalizations in the UK, find that increases in urban green space and tree density are associated with reductions in asthma hospitalizations [@alcock2017,pp.39]. However, models that included air pollutant exposure variables complicated this correlation [@alcock2017,pp.39]. Another study that analyzes variation in spatial distribution of lung cancer incidence rates in Shanghai, China found that industrial parks and urban-rural mixed areas show higher risk of lung cancer [@wang2022, pp.13]. Wang and colleagues also postulate that high lung cancer rates in high-density urban areas away from industrial pollution exposures may be due to traffic and other pollutants [-@wang2022, pp.13].

The complex results of past studies underscore the symbiotic nature of human interactions with the built environment, and the downstream implications on individuals' health status. Wang and colleagues explained the changes in relationship between land use mix and COPD mortality by linking the existence of arterial roadways, which may increase opportunities for generation of air pollutants and negatively impact health, to their use to improve access to care [-@wang2019]. The shift in balance between the two factors, they say, is why results varied in highly urban areas as compared to highly rural regions [@wang2019, pp. 8]. Kim and colleagues also address the dichotomy of the urban environment's impact on traffic, air pollution and behavior by considering walkability and land use diversity in their model of the association between the built environment and asthma in Los Angeles, California [-@kim2023]. Their model builds upon urban planning ideas that mixed-use land reduces motorized travel through promotion of ride-sharing, walking, and shortened distances to destinations, while also promoting better physical through dedicated open spaces and recreational areas [@kim2023, pp. 58]. One limitation of Kim and colleagues' model is the limited spatial scope. In this paper, I build upon elements of Kim and colleagues' model but incorporate other scale considerations.

Scale considerations are a challenge in all spatial analyses, therefore it is not surprising that scale is listed as limitation listed in most spatial analyses of land use, pollution, and respiratory health. Huang and colleagues address the modifiable areal unit problem (MAUP) by analyzing the impacts of land use data at different buffer sizes to determine trends across different spatial units [-@huang2021]. They also select data from different regions that are representative of different environments and climates to determine if regional factors influence their air pollution models [@huang2021]. Their results suggest that land cover types have varying significance across spatial scales, concluding that air pollutant levels are primarily affected by regional land cover types [@huang2021, pp. 7]. This paper builds upon their approach by acknowledging the role that climate plays in air pollution distribution, proliferation, and mitigation. Separating U.S. land areas based on climate region will acknowledge the spillover effects of air pollution that may not be appropriately captured in analyses performed at local scales [@simon2015].

This research uses U.S. age-adjusted mortality rates from cardiovascular and respiratory diseases (defined as ICD-10 codes I00-I99 and J00 - J98) as the health indicator. In Mueller and colleagues' literature analysis on greenspace and respiratory health research, they found that respiratory mortality had the most consistent positive evidence as compared to research measuring other health indicators, including asthma, lung function, hospital admissions, among other measures [@mueller2022, pp. 28]. Using mortality rates from cardiovascular and respiratory diseases will capture acute and chronic conditions that can be impacted by instances of severe drops in air quality and more moderate yet sustained air quality issues.

## Relationship Between Health and Place

One reason why it is difficult to prove a causal relationship between environmental risk factors such as air pollution and a health outcome is because health outcomes can be cumulative results of a combination of factors. When considering air pollution's impact on health, one such factor are air pollution's exposure pathways. Exposure can vary depending on distance from sources of pollution and the amount of time spent breathing in pollutants, both of which can fluctuate when considering climate, ventilation, time spent outdoors, among other factors. Arguably the simplest way to measure exposure is by measuring proximity to pollutant sources. However, spatial analysis of epidemiological phenomena should consider more than just geographic location. This is because an individual's activity spaces are not simply a feature of that person, but a reflection of a myriad of influences that result in an individuals' choice to frequent those spaces. Entwisle highlights this topic in *Putting People into Place,* arguing that there is a critical need to "incorporate agency in theories of neighborhood and health," [@entwisle2007, pp. 699]. Entwisle identifies the symbiotic relationship between individuals' opportunities, social interactions, BLAH that inform decisions to move to or remain in a space, and how that informs health decisions. She also acknowledges that individuals can influence their communities. Bernard and colleagues build on this notion by formalizing a conceptualization of neighborhoods. Their framework identifies four primary influences on access to health-related resources: "proximity, rights, prices, and informal reciprocity," [@bernard2007, pp. 1849]. WRAP ABOUT HOW THIS RELATES.

This research acknowledges the role that individual decisions play in informing their activity spaces by including demographic and quality of life variables. The inclusion of these variables help to contextualize individuals within each county. These variables range from race to income, education, access to care, and health behaviors. By including demographic and quality of life variables, the model attempts to characterize those occupying the spaces, account for factors that influence interactions with health related resources, and acknowledge the role of positive and negative health behaviors on mortality risk.

The fact that this research fails to acknowledge the role that individuals' play in influencing their localities is a shortcoming that can be addressed in future iterations of this model. Local communities are constantly being reshaped in large and small ways. Agency over change in space (use the vocabulary that Browning uses) can be evaluated by reviewing changes in localities over time. In this research, individual influence over their communities may manifest in improvements to regulations to reduce industrial air pollution, improvement to ventilation systems, and increases in indoor recreation alternatives, to name a few examples. Such interventions could lower community exposure to air pollution and potentially reduce adverse health impacts. A future enhancement to this model would incorporate variables over a longer time horizon to measure sensitivity of mortality rates to changes in localities over time.

## Data and Methods

Data fall into four major categories: health, demographic, air pollution, and land use. However, since this is a spatial analysis, the common thread in all data sources is the spatial linkage. Spatial evaluation of air pollution's impact on health is considered on a regional level. Following the approach that Simon and colleagues take to evaluate ozone trends in the U.S., this analysis also uses NOAA climate regions in the analysis of air pollution [-@simon2015]. Evaluation of data on a regional scale lowers the model's sensitivity to factors such as wind, climate, and pollutants' chemical reactions with other molecules in the air that can cause the concentration of air pollution to change [@simon2015, pp 186, pp. 188]. To this end, four regions were selected for this research, which represent different climate areas and a wide variety of land cover types.

```{r}
#| fig-cap: Figure 1; Annual summary of air quality metrics by monitoring site from 2014 - 2016

readRenviron("~/.Renviron") ## my census api key thru PSU census_api_key("eaaf0e3dde825849338015707f07974203e9ae94",install = TRUE, overwrite = TRUE)

#v20<- load_variables(2016, "acs5", cache = TRUE)

#export to csv #write.csv(v20, file = "R/outputs/var.csv")
options(tigris_use_cache = TRUE)

acs <- get_acs(geography = "county" ,
               variables = c(tot_pop = "B01001_001" , 
                             tot_wht = "B02001_002" , 
                             tot_blk = "B02001_003" , 
                             tot_his = "B03001_003" , 
                             tot_pov = "B17001_002" , 
                             tot_LessthanHS = "B06009_002" ,
                             tot_HS = "B06009_003" , 
                             tot_somecollege = "B06009_004"  ,
                             tot_bach = "B06009_005" ),
              year = 2016,
              geometry = TRUE)#income in past 12 mos below poverty level ,year =2016 ,geometry = TRUE)

#load air quality data
#airQ_14 <- read.csv('C:/Users/tamas/OneDrive/Documents/APDEM 808/data files/annual_conc_by_monitor_2014_v1.csv', header = TRUE, sep = ",", fill=TRUE)
airQ_15_PM <- read.csv('data files/annual_conc_by_monitor_2015_v1.csv', header = TRUE, sep = ",", fill=TRUE)
airQ_15_O <- read.csv('data files/annual_conc_by_monitor_2015_v2.csv', header = TRUE, sep = ",", fill=TRUE)
#airQ_16 <- read.csv('C:/Users/tamas/OneDrive/Documents/APDEM 808/data files/annual_conc_by_monitor_2016_v1.csv', header = TRUE, sep = ",", fill=TRUE)
airQ_all <- read.csv('data files/annual_conc_by_monitor_3yr.csv', header = TRUE, sep = ",", fill=TRUE)
airQ_county <- read.csv('data files/conreport2015.csv', header = TRUE, sep = ",", fill=TRUE)
airQ_county_m <- read.csv('data files/PM25 Monitored and Modeled 2015.csv', header = TRUE, sep = ",", fill=TRUE)

# Code Climate Regions by state per NOAA
NE <- c('09','10','11','23','24','25','33','36','42','44','50','34')
NR <- c('30','31','38','46','56') #Northern Rockies and Plains
W <- c('06','32')
UM <-c('19','26','27','55') #Upper Midwest
S <- c('05','20','22','28','40','48') 
OV <- c('17','18','21','29','39','47','54') #Ohio Valley
SE <- c('01','12','13','37','45','51')
SW <-c('04','08','35','49')
NW <-c('16','41','53')
non_US <-c('02','15','60','66','69','72','78') #outside of continental US

#turn this into a data table
STATEFP<-c('09','10','11','23','24','25','33','36','42','44','50','34','30','31','38','46','56','06','32','19','26','27','55','05','20','22','28','40','48','17','18','21','29','39','47','54','01','12','13','37','45','51','04','08','35','49','16','41','53','02','15','60','66','69','72','78')
reg_names<-c('NE','NE','NE','NE','NE','NE','NE','NE','NE','NE','NE','NE','NR','NR','NR','NR','NR','W','W','UM','UM','UM','UM','S','S','S','S','S','S','OV','OV','OV','OV','OV','OV','OV','SE','SE','SE','SE','SE','SE','SW','SW','SW','SW','NW','NW','NW','non_US','non_US','non_US','non_US','non_US','non_US','non_US')

regions<-data.frame(STATEFP,reg_names)

#State Outlines for when we map the results...
options(tigris_class = "sf")
sts<- tigris::states(cb=F, year = 2015)
sts<- st_boundary(sts)%>%
  st_transform(crs = 2163)%>%
  filter(!STATEFP%in%non_US)

#plot data airq 2015
ggplot(acs)+geom_sf(data=sts, color="black")+
  geom_point(data=airQ_15_PM,
             aes(x = Longitude, y = Latitude),
             fill = "transparent",
             colour = "black",
             size = 1)+
  geom_point(data = airQ_15_PM,
             aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
              size = 0.5)+
  scale_color_gradient(low = "yellow",
                       high = "navy",
                       name = 'Mean PM 2.5 Lvl')+
  ggtitle("Annual Avg: PM2.5 Levels by Monitor", subtitle = "U.S. EPA, 2015")

# #plot data airq 2015 Daily 8 hour avg ozone reading
# AirQ_plot2<-ggplot(acs)+geom_sf(data=sts, color="black")+
#   geom_point(data=airQ_15_O,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = .75)+
#   geom_point(data = airQ_15_O,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 0.25)+
#   scale_color_gradient(low = "yellow",
#                        high = "navy",
#                        name = 'Mean Ozone')+
#   ggtitle("Annual Avg: Daily 8-Hour Avg Ozone", subtitle = "U.S. EPA, 2015")
# 
# #print together
# cowplot::plot_grid(AirQ_plot1, AirQ_plot2)

#add leading zeroes to state and county
airQ_vec_c <- airQ_15_PM%>% pull(County.Code)
co_vec_airQ <-sprintf("%02d",as.numeric(airQ_vec_c))
airQ_vec_s <- airQ_15_PM%>% pull(State.Code)
st_vec_airQ <-sprintf("%02d",as.numeric(airQ_vec_s))

airQ_prep1 <-cbind(st_vec_airQ,co_vec_airQ,airQ_15_PM)
airQ_prep2 <-airQ_prep1[,-c(3,4)]
```

This research focuses on particulate matter (PM) 2.5 measures from 2015, as captured by the Environmental Protection Agency (EPA) and further manipulated by the Centers for Disease Control and Prevention (CDC). PM 2.5 are "fine, inhalable particles with diameters that are generally 2.5 micrometers or smaller," that have been linked to various complications with lung and heart functions [@usepa2016]. The EPA publishes extensive amounts of air quality data, which are accessible through their Air Data website. Available data include annual summaries by monitor.

Figure 1 plots the 2015 annual PM 2.5 measures on region-dependent scales by NOAA Climate region to provide a geographic reference for monitor locations and start to visually represent the variation in PM 2.5 measurements by region. The entire contiguous U.S. is represented in Figure 1, but it is worth noting that only the Northwest, West, Ohio Valley, and Southeast NOAA Climate Regions were selected for this study. These regions were selected due to their climatic variation, regional air quality variation, and either high presence or decent distribution of air quality monitors. A visual inspection of Figure 1 reveals how monitors are distributed throughout each region and their individual readings. It is noted that though the West region has a relative abundance of monitors in California, monitors are sparse in Nevada. This observation leads to the acknowledgement of potential spatial bias: monitors are not normally distributed throughout space, therefore spatial bias may be introduced due to the distribution of data across the measurement areas. However, the level of spatial bias difficult to measure due to the use of the CDC's modeled data.

```{r}
#| fig-width: 10
#| fig-height: 8
#| fig-cap: Figure 2; Average Annual PM 2.5 by region. Regional P.M 2.5 levels plotted on different scales.

# #start prepping for region plots
# sts_NE<- sts%>%filter(STATEFP%in%NE) 
# 
# #plot data airq 2015
# NE_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%NE)
# 
# NE_plot<-ggplot(acs)+geom_sf(data=sts_NE, color="black")+
#   geom_point(data=NE_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = NE_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Northeast", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_NR<- sts%>%filter(STATEFP%in%NR) #exclude those outside of continental US
# 
# #plot data airq 2015
# NR_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%NR)
# 
# NR_plot<-ggplot(acs)+geom_sf(data=sts_NR, color="black")+
#   geom_point(data=NR_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = NR_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Northern Rockies", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_W<- sts%>%filter(STATEFP%in%W) #exclude those outside of continental US
# 
# #plot data airq 2015
# W_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%W)
# 
# W_plot<-ggplot(acs)+geom_sf(data=sts_W, color="black")+
#   geom_point(data=W_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = W_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: West", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_UM<- sts%>%filter(STATEFP%in%UM) #exclude those outside of continental US
# 
# #plot data airq 2015
# UM_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%UM)
# 
# UM_plot<-ggplot(acs)+geom_sf(data=sts_UM, color="black")+
#   geom_point(data=UM_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = UM_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Upper Midwest", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_OV<- sts%>%filter(STATEFP%in%OV) #exclude those outside of continental US
# 
# #plot data airq 2015
# OV_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%OV)
# 
# OV_plot<-ggplot(acs)+geom_sf(data=sts_OV, color="black")+
#   geom_point(data=OV_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = OV_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Ohio Valley", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_S<- sts%>%filter(STATEFP%in%S) #exclude those outside of continental US
# 
# #plot data airq 2015
# S_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%S)
# 
# S_plot<-ggplot(acs)+geom_sf(data=sts_S, color="black")+
#   geom_point(data=S_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = S_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: South", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_SE<- sts%>%filter(STATEFP%in%SE) #exclude those outside of continental US
# 
# #plot data airq 2015
# SE_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%SE)
# 
# SE_plot<-ggplot(acs)+geom_sf(data=sts_SE, color="black")+
#   geom_point(data=SE_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = SE_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Southeast", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_SW<- sts%>%filter(STATEFP%in%SW) #exclude those outside of continental US
# 
# #plot data airq 2015
# SW_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%SW)
# 
# SW_plot<-ggplot(acs)+geom_sf(data=sts_SW, color="black")+
#   geom_point(data=SW_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = SW_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Southwest", subtitle = "U.S. EPA, 2015")
# 
# #start prepping for region plots
# sts_NW<- sts%>%filter(STATEFP%in%NW) #exclude those outside of continental US
# 
# #plot data airq 2015
# NW_dat<-airQ_prep2%>%
#   filter(st_vec_airQ%in%NW)
# 
# NW_plot<-ggplot(acs)+geom_sf(data=sts_NW, color="black")+
#   geom_point(data=NW_dat,
#              aes(x = Longitude, y = Latitude),
#              fill = "transparent",
#              colour = "black",
#              size = 1.5)+
#   geom_point(data = NW_dat,
#              aes(x = Longitude, y = Latitude, colour = Arithmetic.Mean),
#              size = 1)+
#   scale_color_gradient(low = "yellow", high = "navy", name = 'PM2.5')+
#   labs(x=NULL, y=NULL) +
#   guides(x="none",y="none") +
#   ggtitle("Air Quality: Northwest", subtitle = "U.S. EPA, 2015")
# 
# #map all 2015 Air Quality data
# cowplot::plot_grid(NW_plot, NR_plot, NE_plot, W_plot, SW_plot, UM_plot, OV_plot, S_plot, SE_plot)

```

The CDC provides measured and modeled PM 2.5 data by county for the U.S., as depicted in Figure 2. They derive their data from daily PM 2.5 measurements produced by the EPA, then further model to infer measurements for areas where there are gaps in the data. Derivations are primarily based on the Downscaler (DS) model, which is "a statistical fusion of monitoring data and Community Multiscale Air Quality (CMAQ) outputs," \[\@geograph\]. While use of this data is convenient, a future iteration of this research will produce and employ a PM 2.5 inference model, which would be produced specifically for this research. Doing so would control for any unknowns that are introduced due to the limitations of using modeled data that is not easily reproducible.

One limitation of the air quality data used in this model is the use of annually summarized data. While useful, annual summaries may not be sensitive enough to capture acute changes in air quality, which pose a health risk (CITE?). This relationship may not be captured in the model if poor air quality days are infrequent enough to impact the mean. For simplicity, this research does not take seasonality into consideration and instead uses annual averages, which does not accurately reflect variation in air pollution ranges.

DESCRIBE FIGURE 2

```{r}
#| fig-width: 10
#| fig-height: 6
#| fig-cap: Figure 2; County-level air pollution statistics. Region selection limited by availability of data

#split cofips to two columns
acs_dat <-acs %>%
  pivot_wider(names_from = "variable", values_from = c("estimate", "moe"))%>%
  rename(cofips = GEOID)%>%
  transform(STATEFP = substr(cofips, 1, 2))%>%
  filter(!STATEFP%in%non_US) #exclude those outside of continental US

#load mortality data
AAMR_all <- read.table('data files/All Underlying Cause Mortality Rates Ade Adjusted 2014 thru 2016.txt',header = TRUE, sep = "\t", fill=TRUE)
AAMR_ICDI_all <- read.table('data files/Card Resp Mortality Rates Age Adjusted All Ages.txt',header = TRUE, sep = "\t", fill=TRUE)
AAMR_ICDI_65 <- read.table('data files/Card Resp Mortality Rates Age Adjusted 65+.txt',header = TRUE, sep = "\t", fill=TRUE)


CDC_data_prep1 <- full_join(AAMR_all,AAMR_ICDI_all, by = "County.Code")
CDC_data_prep2 <-full_join(CDC_data_prep1,AAMR_ICDI_65,by="County.Code")
CDC_data_prep3 <-CDC_data_prep2 %>%
  rename(cofips = County.Code)

#add leading zeros to CDC data county FIPs codes
cofips_vec <- CDC_data_prep3 %>% pull(cofips)
cofips_vec_new <-sprintf("%05d",as.numeric(cofips_vec))
CDC_data_prep4 <-cbind(cofips_vec_new,CDC_data_prep3)

#clean up columns
CDC_data_prep5 <-CDC_data_prep4[,c(1,3,7,8,13,14,19,20)]%>%
  rename(AAMR_all_crude = Crude.Rate.x
         , AAMR_all_aa = Age.Adjusted.Rate.x
         , AAMR_ICDI_crude = Crude.Rate.y
         , AAMR_ICDI_aa = Age.Adjusted.Rate.y
         , AAMR_ICDI65_crude = Crude.Rate
         , AAMR_ICDI65_aa = Age.Adjusted.Rate
         , cofips = cofips_vec_new)


#1/15/23 prelim merges so I can eval data
merge1 <-left_join(acs_dat,CDC_data_prep5, by = "cofips")

merge2 <- merge1 %>%
  mutate(across(c(AAMR_all_crude:AAMR_ICDI65_aa), na_if, 'Unreliable'))

cols <-c("AAMR_all_aa","AAMR_ICDI_aa","AAMR_ICDI65_aa")

merge3 <- merge2 %>%
  mutate_at(cols,as.numeric)


#replace NAs with mean
is.na_replace_mean1 <- merge3$AAMR_all_aa      # Duplicate first column
x_num_mean1 <- as.numeric(mean(is.na_replace_mean1, na.rm = TRUE))        # Calculate mean
is.na_replace_mean1[is.na(is.na_replace_mean1)] <- x_num_mean1

is.na_replace_mean2 <- merge3$AAMR_ICDI_aa      # Duplicate first column
x_num_mean2 <- as.numeric(mean(is.na_replace_mean2, na.rm = TRUE))        # Calculate mean
is.na_replace_mean2[is.na(is.na_replace_mean2)] <- x_num_mean2

is.na_replace_mean3 <- merge3$AAMR_ICDI65_aa                           # Duplicate first column
x_num_mean3 <- as.numeric(mean(is.na_replace_mean3, na.rm = TRUE))        # Calculate mean
is.na_replace_mean3[is.na(is.na_replace_mean3)] <- x_num_mean3

#merge with data table
prep1 <- cbind(merge3,is.na_replace_mean1, is.na_replace_mean2, is.na_replace_mean3)%>%
  rename(AAMR_all_aa_use = is.na_replace_mean1,
         AAMR_all_ICDI_use = is.na_replace_mean2,
         AAMR_all_ICDI65_use = is.na_replace_mean3)

#prep county airQ data; add leading zeroes to state and county
airQ_vec_c <- airQ_county_m%>% pull(cofips)
co_vec_airQ <-sprintf("%05d",as.numeric(airQ_vec_c))
airQ_vec_s <- airQ_county_m%>% pull(StateFIPS)
st_vec_airQ <-sprintf("%02d",as.numeric(airQ_vec_s))

airQ_c_prep1 <-cbind(co_vec_airQ,st_vec_airQ,airQ_county_m)
airQ_c_prep2 <-airQ_c_prep1[,-c(3,5)]%>%
  rename(cofips=co_vec_airQ)

#join to the rest of county level data
c_prep1 <- left_join(prep1,airQ_c_prep2, by="cofips")
c_prep2 <- subset(c_prep1,select = -c(12:20,22,32:35))%>%
  rename(PM2.5=Value)

#map pollution indicators

#State Outlines for when we map the results...
options(tigris_class = "sf")
sts<- tigris::states(cb=T, year = 2016 )
sts<- st_boundary(sts)%>%
  st_transform(crs = 2163)%>%
  filter(!STATEFP%in%non_US) #exclude those outside of continental US

c_prep2%>%
  mutate(PM= cut(PM2.5, breaks=quantile(PM2.5, p=seq(0,1,length.out = 6), na.rm=T), include.lowest=T ))%>%
  ggplot()+geom_sf(aes(fill=PM,color=NA))+
  scale_color_brewer("Blues")+
  scale_fill_brewer(palette = "Blues", na.value="grey50")+
  geom_sf(data=sts, color="black")+
  ggtitle("Monitored & Modeled PM 2.5 Levels by County", subtitle = "CDC National Environmental Public Health Tracking Data, 2015")


# #prep county airQ data; add leading zeroes to state and county
# airQ_vec_c <- airQ_county%>% pull(County.Code)
# co_vec_airQ <-sprintf("%05d",as.numeric(airQ_vec_c))
# 
# 
# airQ_c_prep1 <-cbind(co_vec_airQ,airQ_county)
# airQ_c_prep2 <-airQ_c_prep1[,-c(2)]%>%
#   rename(cofips=co_vec_airQ)%>%
#   mutate(across(c(CO.2nd.Max.1.hr:Lead.Max.3.Mo.Avg), na_if, '.'))
# 
# #convert target col values from character to numeric
# cols.num <- c("PM2.5.Weighted.Mean.24.hr","Ozone.2nd.Max.1.hr")
# airQ_c_prep2[cols.num] <- sapply(airQ_c_prep2[cols.num],as.numeric)
# 
# #join to the rest of county level data
# c_prep1 <- left_join(prep1,airQ_c_prep2, by="cofips")
# c_prep2 <- subset(c_prep1,select = -c(8:12,14,24))
# 
# #map pollution indicators
# 
# #State Outlines for when we map the results...
# options(tigris_class = "sf")
# sts<- tigris::states(cb=T, year = 2016 )
# sts<- st_boundary(sts)%>%
#   st_transform(crs = 2163)%>%
#   filter(!STATEFP%in%non_US) #exclude those outside of continental US
# 
# airQ_c_plot1 <-c_prep2%>%
#   mutate(PM= cut(PM2.5.Weighted.Mean.24.hr, breaks=quantile(PM2.5.Weighted.Mean.24.hr, p=seq(0,1,length.out = 6), na.rm=T), include.lowest=T ))%>%
#   ggplot()+geom_sf(aes(fill=PM,color=NA))+
#   scale_color_brewer("Blues")+
#   scale_fill_brewer(palette = "Blues", na.value="grey50")+
#   geom_sf(data=sts, color="black")+
#   ggtitle("24 hour average PM 2.5 Levels by County", subtitle = "US EPA, 2015")
# 
# airQ_c_plot2 <-c_prep2%>%
#   mutate(Ozone= cut(Ozone.2nd.Max.1.hr, breaks=quantile(Ozone.2nd.Max.1.hr, p=seq(0,1,length.out = 4), na.rm=T), include.lowest=T ))%>%
#   ggplot()+geom_sf(aes(fill=Ozone,color=NA))+
#   scale_color_brewer("Blues")+
#   scale_fill_brewer(palette = "Blues", na.value="grey50")+
#   geom_sf(data=sts, color="black")+
#   ggtitle("1-hour second max Ozone Levels by County", subtitle = "US EPA, 2015")
# 
# #map all 2015 Air Quality data
# cowplot::plot_grid(airQ_c_plot1, airQ_c_plot2)
```

```{r}
#| fig-width: 14
#| fig-height: 8
#| fig-cap: Figure 3; UPDATE CAPTION
#| 
#load climate data
clim_cdd_c <- read_excel('data files/110-cdd-201412-12.xlsx')
clim_hdd_c <- read_excel('data files/110-hdd-201412-12.xlsx')
clim_pcp_c <- read_excel('data files/110-pcp-201412-12.xlsx')
clim_tavg_c <- read_excel('data files/110-tavg-201412-12.xlsx')
clim_tmax_c <- read_excel('data files/110-tmax-201412-12.xlsx')
clim_tmin_c <- read_excel('data files/110-tmin-201412-12.xlsx')

#looping through each climate file
c_prep3a <- left_join(c_prep2,clim_cdd_c, by="cofips")
c_prep3a <- subset(c_prep3a,select = -c(24,25))%>%
  rename(CDD = Value, Rank_CDD = Rank, Anomolay_CDD = 'Anomaly (1901-2000 base period)', Mean_CDD = '1901-2000 Mean')

c_prep3b <- left_join(c_prep3a,clim_hdd_c, by="cofips")
c_prep3b <- subset(c_prep3b,select = -c(28,29))%>%
  rename(HDD = Value, Rank_HDD = Rank, Anomolay_HDD = 'Anomaly (1901-2000 base period)', Mean_HDD = '1901-2000 Mean')

c_prep3c <- left_join(c_prep3b,clim_pcp_c, by="cofips")
c_prep3c <- subset(c_prep3c,select = -c(32,33))%>%
  rename(PCP = Value, Rank_PCP = Rank, Anomolay_PCP = 'Anomaly (1901-2000 base period)', Mean_PCP = '1901-2000 Mean')

c_prep3d <- left_join(c_prep3c,clim_tavg_c, by="cofips")
c_prep3d <- subset(c_prep3d,select = -c(36,37))%>%
  rename(TAVG = Value, Rank_TAVG = Rank, Anomolay_TAVG = 'Anomaly (1901-2000 base period)', Mean_TAVG = '1901-2000 Mean')

c_prep3e <- left_join(c_prep3d,clim_tmax_c, by="cofips")
c_prep3e <- subset(c_prep3e,select = -c(40,41))%>%
  rename(TMAX = Value, Rank_TMAX = Rank, Anomolay_TMAX = 'Anomaly (1901-2000 base period)', Mean_TMAX = '1901-2000 Mean')

c_prep3f <- left_join(c_prep3e,clim_tmin_c, by="cofips")
c_prep3f <- subset(c_prep3f,select = -c(44,45))%>%
  rename(TMIN = Value, Rank_TMIN = Rank, Anomolay_TMIN = 'Anomaly (1901-2000 base period)', Mean_TMIN = '1901-2000 Mean')

#merge to regions list
c_prep4<-left_join(c_prep3f,regions, by= "STATEFP")

#create box plots
plot_clim_cdd <- ggplot(c_prep4, aes(x = reg_names, y = CDD, fill = reg_names)) +    # Create boxplot chart in ggplot2
  geom_boxplot()+
  labs(x="",y="Cooling Degree Days") +
  ggtitle("Annual Cooling Degree Days")

plot_clim_hdd <- ggplot(c_prep4, aes(x = reg_names, y = HDD, fill = reg_names)) +    # Create boxplot chart in ggplot2
  geom_boxplot()+
  labs(x="",y="Heating Degree Days") +
  ggtitle("Annual Heating Degree Days")

plot_clim_pcp <- ggplot(c_prep4, aes(x = reg_names, y = PCP, fill = reg_names)) +    # Create boxplot chart in ggplot2
  geom_boxplot()+
  labs(x="",y="Precipitation") +
  ggtitle("Annual Precipitation")

plot_clim_tavg <- ggplot(c_prep4, aes(x = reg_names, y = TAVG, fill = reg_names)) +    # Create boxplot chart in ggplot2
  geom_boxplot()+
  labs(x="",y="Degrees (Farenheit)") +
  ggtitle("Average Annual Temperature")

plot_clim_tmax <- ggplot(c_prep4, aes(x = reg_names, y = TMAX, fill = reg_names)) +    # Create boxplot chart in ggplot2
  geom_boxplot()+
  labs(x="",y="Degrees (Farenheit)") +
  ggtitle("Maximum Temparature")

plot_clim_tmin <- ggplot(c_prep4, aes(x = reg_names, y = TMIN, fill = reg_names)) +    # Create boxplot chart in ggplot2
  geom_boxplot()+
  labs(x="",y="Degrees (Farenheit)") +
  ggtitle("Minimum Temparature")

#plot the box plots in a 2 x 3 grid
grid.arrange(plot_clim_tavg, plot_clim_tmin, plot_clim_tmax, plot_clim_cdd, plot_clim_hdd, plot_clim_pcp, 
             ncol = 3, nrow=2,
             top = textGrob("Climate Variables by County",gp=gpar(fontsize=18,font=3))
             )

```

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-cap: Figure 4; UPDATE CAPTION
plot_cor_cdd <- ggscatter(c_prep4, x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Cooling Degree Days",
          xlab = "", ylab = "")

plot_cor_hdd <- ggscatter(c_prep4, x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Heating Degree Days",
          xlab = "", ylab = "")

plot_cor_pcp <- ggscatter(c_prep4, x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Precipitation",
          xlab = "", ylab = "")

plot_cor_tavg <- ggscatter(c_prep4, x = "PM2.5", y = "TAVG", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Annual Temperature",
          xlab = "", ylab = "")

plot_cor_tmax <- ggscatter(c_prep4, x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Maximum Temp",
          xlab = "", ylab = "")

plot_cor_tmin <- ggscatter(c_prep4, x = "PM2.5", y = "TMIN", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Minumum Temp",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_tavg, plot_cor_tmin, plot_cor_tmax, plot_cor_cdd, plot_cor_hdd, plot_cor_pcp, 
             ncol = 3, nrow=2,
             top = textGrob("Correlation: PM 2.5 Level and Climate Variables by County",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Climate Variable", rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("PM 2.5 Concentration",gp=gpar(fontsize=15,font=3))
             )
```

```{r}
#| fig-width: 12
#| fig-height: 12
#| fig-cap: Figure 5; UPDATE CAPTION
#Correlograms: Air Pollution and Climate Variables

#section 2: plot variables of interest by region
plot_cor_cdd_W <- c_prep4 %>%
  filter(reg_names%in%c("W"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "West",
          xlab = "", ylab = "")

plot_cor_cdd_NW <- c_prep4 %>%
  filter(reg_names%in%c("NW"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northwest",
          xlab = "", ylab = "")

plot_cor_cdd_NE <- c_prep4 %>%
  filter(reg_names%in%c("NE"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northeast",
          xlab = "", ylab = "")

plot_cor_cdd_NR <- c_prep4 %>%
  filter(reg_names%in%c("NR"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northern Rockies",
          xlab = "", ylab = "")

plot_cor_cdd_UM <- c_prep4 %>%
  filter(reg_names%in%c("UM"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Upper Midwest",
          xlab = "", ylab = "")

plot_cor_cdd_S <- c_prep4 %>%
  filter(reg_names%in%c("S"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "South",
          xlab = "", ylab = "")

plot_cor_cdd_SE <- c_prep4 %>%
  filter(reg_names%in%c("SE"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southeast",
          xlab = "", ylab = "")

plot_cor_cdd_SW <- c_prep4 %>%
  filter(reg_names%in%c("SW"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southwest",
          xlab = "", ylab = "")

plot_cor_cdd_OV <- c_prep4 %>%
  filter(reg_names%in%c("OV"))%>%
  ggscatter(x = "PM2.5", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          titale = "Ohio Valley",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_cdd_NW, plot_cor_cdd_W, plot_cor_cdd_NR, plot_cor_cdd_SW, plot_cor_cdd_UM, plot_cor_cdd_S, plot_cor_cdd_OV, plot_cor_cdd_SE, plot_cor_cdd_NE,
             ncol = 3, nrow=3,
             top = textGrob("Correlation: PM 2.5 Level and Cooling Degree Days",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Cooling Degree Days",rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("PM2.5 Concentration",gp=gpar(fontsize=15,font=3))
             )


```

```{r}
#| fig-width: 12
#| fig-height: 12
#| fig-cap: Figure 6; UPDATE CAPTION
#section 2: plot variables of interest by region
plot_cor_tmax_W <- c_prep4 %>%
  filter(reg_names%in%c("W"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "West",
          xlab = "", ylab = "")

plot_cor_tmax_NW <- c_prep4 %>%
  filter(reg_names%in%c("NW"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "NorthWest",
          xlab = "", ylab = "")

plot_cor_tmax_NE <- c_prep4 %>%
  filter(reg_names%in%c("NE"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northeast",
          xlab = "", ylab = "")

plot_cor_tmax_NR <- c_prep4 %>%
  filter(reg_names%in%c("NR"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northern Rockies",
          xlab = "", ylab = "")

plot_cor_tmax_UM <- c_prep4 %>%
  filter(reg_names%in%c("UM"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Midwest",
          xlab = "", ylab = "")

plot_cor_tmax_S <- c_prep4 %>%
  filter(reg_names%in%c("S"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "South",
          xlab = "", ylab = "")

plot_cor_tmax_SE <- c_prep4 %>%
  filter(reg_names%in%c("SE"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southeast",
          xlab = "", ylab = "")

plot_cor_tmax_SW <- c_prep4 %>%
  filter(reg_names%in%c("SW"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southwest",
          xlab = "", ylab = "")

plot_cor_tmax_OV <- c_prep4 %>%
  filter(reg_names%in%c("OV"))%>%
  ggscatter(x = "PM2.5", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Ohio Valley",
          xlab = "", ylab = "")


#plot
grid.arrange(plot_cor_tmax_NW, plot_cor_tmax_W, plot_cor_tmax_NR, plot_cor_tmax_SW, plot_cor_tmax_UM, plot_cor_tmax_S, plot_cor_tmax_OV, plot_cor_tmax_SE, plot_cor_tmax_NE,
             ncol = 3, nrow=3,
             top = textGrob("Correlation: PM 2.5 Level and Maximum Temp",gp=gpar(fontsize=20,font=3)),
             left = textGrob("Max Temp (Degrees Farenheit)",rot = 90),
             bottom = textGrob("PM2.5 Concentration")
             )
```

```{r}
#| fig-width: 12
#| fig-height: 12
#| fig-cap: Figure 7; UPDATE CAPTION
#section 3: plot variables of interest by region
plot_cor_hdd_W <- c_prep4 %>%
  filter(reg_names%in%c("W"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "West",
          xlab = "", ylab = "")

plot_cor_hdd_NW <- c_prep4 %>%
  filter(reg_names%in%c("NW"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northwest",
          xlab = "", ylab = "")

plot_cor_hdd_NE <- c_prep4 %>%
  filter(reg_names%in%c("NE"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northeast",
          xlab = "", ylab = "")

plot_cor_hdd_NR <- c_prep4 %>%
  filter(reg_names%in%c("NR"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northern Rockies",
          xlab = "", ylab = "")

plot_cor_hdd_UM <- c_prep4 %>%
  filter(reg_names%in%c("UM"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Upper Midwest",
          xlab = "", ylab = "")

plot_cor_hdd_S <- c_prep4 %>%
  filter(reg_names%in%c("S"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "South",
          xlab = "", ylab = "")

plot_cor_hdd_SE <- c_prep4 %>%
  filter(reg_names%in%c("SE"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southeast",
          xlab = "", ylab = "")

plot_cor_hdd_SW <- c_prep4 %>%
  filter(reg_names%in%c("SW"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southwest",
          xlab = "", ylab = "")

plot_cor_hdd_OV <- c_prep4 %>%
  filter(reg_names%in%c("OV"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Ohio Valley",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_hdd_NW, plot_cor_hdd_W, plot_cor_hdd_NR, plot_cor_hdd_SW, plot_cor_hdd_UM, plot_cor_hdd_S, plot_cor_hdd_OV, plot_cor_hdd_SE, plot_cor_hdd_NE,
             ncol = 3, nrow=3,
             top = textGrob("Correlation: PM 2.5 Level and Heating Degree Days by County",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Heating Degree Days", rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("PM 2.5 Concentration",gp=gpar(fontsize=15,font=3))
             )
```

```{r}
#| fig-width: 12
#| fig-height: 12
#| fig-cap: Figure 9; UPDATE CAPTION

plot_cor_tmax_W <- c_prep4 %>%
  filter(reg_names%in%c("W"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "West",
          xlab = "", ylab = "")

plot_cor_tmax_NW <- c_prep4 %>%
  filter(reg_names%in%c("NW"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northwest",
          xlab = "", ylab = "")

plot_cor_tmax_NE <- c_prep4 %>%
  filter(reg_names%in%c("NE"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northeast",
          xlab = "", ylab = "")

plot_cor_pcp_NR <- c_prep4 %>%
  filter(reg_names%in%c("NR"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northern Rockies",
          xlab = "", ylab = "")

plot_cor_tmax_UM <- c_prep4 %>%
  filter(reg_names%in%c("UM"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Upper Midwest",
          xlab = "", ylab = "")

plot_cor_hdd_S <- c_prep4 %>%
  filter(reg_names%in%c("S"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "South",
          xlab = "", ylab = "")

plot_cor_tmax_SE <- c_prep4 %>%
  filter(reg_names%in%c("SE"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southeast",
          xlab = "", ylab = "")

plot_cor_tmax_SW <- c_prep4 %>%
  filter(reg_names%in%c("SW"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southwest",
          xlab = "", ylab = "")

plot_cor_tmax_OV <- c_prep4 %>%
  filter(reg_names%in%c("OV"))%>%
  ggscatter(x = "PM2.5", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Ohio Valley",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_tmax_NW, plot_cor_tmax_W, plot_cor_tmax_NR, plot_cor_tmax_SW, plot_cor_tmax_UM, plot_cor_tmax_S, plot_cor_tmax_OV, plot_cor_tmax_SE, plot_cor_tmax_NE,
             ncol = 3, nrow=3,
             top = textGrob("Correlation: PM 2.5 Level and Maximum Temp by County",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Maximum Temp", rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("PM 2.5 Concentration",gp=gpar(fontsize=15,font=3))
             )
```

```{r}
#| fig-width: 12
#| fig-height: 12
#| fig-cap: Figure 9; UPDATE CAPTION
plot_cor_pcp_W <- c_prep4 %>%
  filter(reg_names%in%c("W"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "West",
          xlab = "", ylab = "")

plot_cor_pcp_NW <- c_prep4 %>%
  filter(reg_names%in%c("NW"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northwest",
          xlab = "", ylab = "")

plot_cor_pcp_NE <- c_prep4 %>%
  filter(reg_names%in%c("NE"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northeast",
          xlab = "", ylab = "")

plot_cor_pcp_NR <- c_prep4 %>%
  filter(reg_names%in%c("NR"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Northern Rockies",
          xlab = "", ylab = "")

plot_cor_pcp_UM <- c_prep4 %>%
  filter(reg_names%in%c("UM"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Upper Midwest",
          xlab = "", ylab = "")

plot_cor_pcp_S <- c_prep4 %>%
  filter(reg_names%in%c("S"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "South",
          xlab = "", ylab = "")

plot_cor_pcp_SE <- c_prep4 %>%
  filter(reg_names%in%c("SE"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southeast",
          xlab = "", ylab = "")

plot_cor_pcp_SW <- c_prep4 %>%
  filter(reg_names%in%c("SW"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Southwest",
          xlab = "", ylab = "")

plot_cor_pcp_OV <- c_prep4 %>%
  filter(reg_names%in%c("OV"))%>%
  ggscatter(x = "PM2.5", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          titale = "Ohio Valley",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_pcp_NW, plot_cor_pcp_W, plot_cor_pcp_NR, plot_cor_pcp_SW, plot_cor_pcp_UM, plot_cor_pcp_S, plot_cor_pcp_OV, plot_cor_pcp_SE, plot_cor_pcp_NE,
             ncol = 3, nrow=3,
             top = textGrob("Correlation: PM 2.5 Level and Precipitation",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Precipitation",rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("PM2.5 Concentration",gp=gpar(fontsize=15,font=3))
             )
```

Respiratory health is measured by age-adjusted mortality rates by county, accessed through the Center for Disease Control and Prevention's (CDC) WONDER database. The first data set extracted is all-age, all-cause age-adjusted mortality rate by county for the three-year period from 2014 through 2016. Data were further filtered based on primary reported cause of death based on the ICD-10 code range I00-I99, which encompasses cardiovascular diseases and J00-J98, respiratory diseases [@cdcwond]. Previous research exposing correlations between air pollution and mortality have focused on the same set of diagnostic codes [@oneill2008], [@wong2008]. One limitation of data on the primary cause of death is that health can be influenced by a variety of issues. When there are multiple causes of death, those multiple causes are noted but for this purpose, only the primary cause is used to characterize the cardiovascular or respiratory disease-related death population. Therefore, the data would be missing those who had respiratory illnesses as a contributing factor but not the primary cause. It would be interesting to better analyze this population to see if there are trends that would support the inclusion of respiratory disease as a cause of death (and not just the primary cause), but for this research, honing in on the primary cause of death should be sufficient. Another limitation is that the diagnostic classes used in this model are broad. It is an intentional choice to cast a wide net on mortality causes because air pollution's impact on individual health can manifest in a variety of ways. However, the shortcoming of this tactic is that it introduces more data that may potentially be unrelated to air pollution. This is something to be mindful of when reviewing the results of data modeling.

DESCRIBE DATA

```{r}
#plot mortality data

#plot data 2
prep1%>%
  mutate(AAMR= cut(AAMR_all_aa , breaks=quantile(AAMR_all_aa, p=seq(0,1,length.out = 6), na.rm=T ), include.lowest=T ))%>%
  ggplot()+geom_sf(aes(fill=AAMR,color=NA))+
  scale_colour_viridis_d()+
  scale_fill_viridis_d(option = "magma",direction = -1, na.value="grey50")+
  scale_y_continuous(label=scales::comma)+
  geom_sf(data=sts, color="black")+
  ggtitle("Age-Adjusted Mortality Rate", subtitle = "Rates per 100,000; CDC, 2014 - 2016")

#plot data 3
prep1%>%
  mutate(AAMR_ICDI= cut(AAMR_ICDI_aa, breaks=quantile(AAMR_ICDI_aa, p=seq(0,1,length.out = 6), na.rm=T ), include.lowest=T ))%>%
  ggplot()+geom_sf(aes(fill=AAMR_ICDI,color=NA))+
  scale_colour_viridis_d()+
  scale_fill_viridis_d(direction = -1, na.value="grey50")+
  scale_y_continuous(label=scales::comma)+
  geom_sf(data=sts, color="black")+
  ggtitle("Age-Adjusted Mortality Rates - Cardiovascular & Respiratory Diseases", subtitle = "Rates per 100,000; CDC, 2014 - 2016")

#plot data 4
prep1%>%
  mutate(AAMR_ICDI_65= cut(AAMR_ICDI65_aa, breaks=quantile(AAMR_ICDI65_aa, p=seq(0,1,length.out = 6), na.rm=T ), include.lowest=T ))%>%
  ggplot()+geom_sf(aes(fill=AAMR_ICDI_65,color=NA))+
  scale_colour_viridis_d()+
  scale_fill_viridis_d(direction = -1, na.value="grey50")+
  scale_y_continuous(label=scales::comma)+
  geom_sf(data=sts, color="black")+
  ggtitle("Age-Adjusted Mortality Rates 65+: Cardiovascular & Respiratory Diseases", subtitle = "Rates per 100,000; CDC, 2014 - 2016")
```

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-cap: Figure 4; UPDATE CAPTION
plot_cor_cdd_mor <- ggscatter(c_prep4, x = "AAMR_ICDI_aa", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Cooling Degree Days",
          xlab = "", ylab = "")

plot_cor_hdd_mor <- ggscatter(c_prep4, x = "AAMR_ICDI_aa", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Heating Degree Days",
          xlab = "", ylab = "")

plot_cor_pcp_mor <- ggscatter(c_prep4, x = "AAMR_ICDI_aa", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Precipitation",
          xlab = "", ylab = "")

plot_cor_tavg_mor <- ggscatter(c_prep4, x = "AAMR_ICDI_aa", y = "TAVG", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Annual Temperature",
          xlab = "", ylab = "")

plot_cor_tmax_mor <- ggscatter(c_prep4, x = "AAMR_ICDI_aa", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Maximum Temp",
          xlab = "", ylab = "")

plot_cor_tmin_mor <- ggscatter(c_prep4, x = "AAMR_ICDI_aa", y = "TMIN", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Minumum Temp",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_tavg_mor, plot_cor_tmin_mor, plot_cor_tmax_mor, plot_cor_cdd_mor, plot_cor_hdd_mor, plot_cor_pcp_mor, 
             ncol = 3, nrow=2,
             top = textGrob("Correlation: Age-Adjusted Mortality Rates and Climate Variables by County",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Climate Variable", rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("Age Adjusted Mortality Rate",gp=gpar(fontsize=15,font=3))
             )
```

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-cap: Figure 4; UPDATE CAPTION
plot_cor_cdd_mor65 <- ggscatter(c_prep4, x = "AAMR_ICDI65_aa", y = "CDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Cooling Degree Days",
          xlab = "", ylab = "")

plot_cor_hdd_mor65 <- ggscatter(c_prep4, x = "AAMR_ICDI65_aa", y = "HDD", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Heating Degree Days",
          xlab = "", ylab = "")

plot_cor_pcp_mor65 <- ggscatter(c_prep4, x = "AAMR_ICDI65_aa", y = "PCP", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Precipitation",
          xlab = "", ylab = "")

plot_cor_tavg_mor65 <- ggscatter(c_prep4, x = "AAMR_ICDI65_aa", y = "TAVG", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Annual Temperature",
          xlab = "", ylab = "")

plot_cor_tmax_mor65 <- ggscatter(c_prep4, x = "AAMR_ICDI65_aa", y = "TMAX", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Maximum Temp",
          xlab = "", ylab = "")

plot_cor_tmin_mor65 <- ggscatter(c_prep4, x = "AAMR_ICDI65_aa", y = "TMIN", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          title = "Minumum Temp",
          xlab = "", ylab = "")

#plot
grid.arrange(plot_cor_tavg_mor65, plot_cor_tmin_mor65, plot_cor_tmax_mor65, plot_cor_cdd_mor65, plot_cor_hdd_mor65, plot_cor_pcp_mor65, 
             ncol = 3, nrow=2,
             top = textGrob("Correlation: Age-Adjusted Mortality Rates and Climate Variables by County",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Climate Variable", rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("Age Adjusted Mortality Rate, 65 and over",gp=gpar(fontsize=15,font=3))
             )
```

To further characterize county populations, demographic and behavioral data are consulted. 2015 data on age-adjusted adult smoking rates by county are extracted from the University of Wisconsin Public Health Institute's County Health Rankings. This data are consulted to normalize out any distortions caused by smoking habits by county. However, prevalence rates do not capture the severity of tobacco use by individual. Severity of smoking habits are not considered in this model. County Health Rankings' source for its smoking data is the CDC's Behavioral Risk Factor Surveillance System (BRFSS) [@adultsm]. County Health Rankings data aggregates other useful variables that are used in their model. Adult obesity rates by county, sourced from BRFSS data, are also used. One limitation to the BRFSS is that data is collected from surveys, then extrapolated to characterize county-level summaries. The conduction of surveys and extrapolation process leave room for error so is noted for transparency. Another data point extracted from County Health Rankings is the percent of the population that is uninsured (Source: U.S. Census Bureau's Small Area Health Insurance Estimates (SAHIE)) [@2022mea]. SAHIE's percent uninsured estimates the percent of the population that is 65 and under who do not have health insurance [@uninsure]. According to the U.S. Census Bureau, "SAHIE uses statistical models that combine survey data from the American Community Survey (ACS) with administrate records data and Census 2010 data," [@bureau]. The benefit of SAHIE's modeling approach is that it attempts to control for estimates for small areas where data is more sparse [@bureau]. As with any modeled data, a notable risk is the reliance on the robustness of the U.S. Census Bureau's model, though the Census Bureau does provide margins of error for their model results. Other demographic data are obtained from the U.S. Census Bureau's American Community Survey (ACS) 5-year estimates. 2016 data for following variables are used in this model: Percent poverty, percent Black, percent Hispanic, urbanization, and education statistics. ACS data are obtained through the Census API, accessed through R Studio.

Land cover data used in this model are originally sourced from the National Land Cover Database's (NLCD). The International Public Use Microdata Series (IPUMS) released county-level summaries of NLCD land cover data, which are displayed in the ensuing plots. Per IPUMS' annotations on methodology, NLCD data were layered with census geographic polygons to calculate the area covered by each land class [@environm]. Land cover classifications are determined by NLCD using a modified Anderson Land Cover Classification System [@national]. A description of NLCD's land cover classifications are denoted in the data table below. Data used in this model reflect 2011 land cover data summarized by county geographic boundaries in the U.S. Census Bureau's 2015 data set.

![NLCD Land Cover Types](land%20cover%20types.png){width="666"}

```{r}
#| fig-cap: Figure 11; UPDATE CAPTION
#load NLCD download
#NLCD<-raster::raster('C:/Users/tamas/OneDrive/Documents/APDEM 808/data files/nlcd_2019_land_cover_l48_20210604.img')
NLCD_15<- read.csv('data files/US_county_2015_nlcd_2011_v1.csv', header = TRUE, sep = ",", fill=TRUE)

#add leading zeroes
NLCD_vec_c <- NLCD_15%>%
  pull(cofips)
co_vec_NLCD <-sprintf("%05d",as.numeric(NLCD_vec_c))

NLCD_prep1 <-cbind(co_vec_NLCD,NLCD_15)
NLCD_prep2 <-NLCD_prep1[,-c(2,3,4,5)]

#remove all but the proportion columns - need to fix rename
NLCD_prep3 <-NLCD_prep2[,-c(2:19)]%>%
  rename(cofips=co_vec_NLCD)%>%
  replace(is.na(.),0)

#merge to our running file
c_prep5<-left_join(c_prep4, NLCD_prep3, by = "cofips")

#add summarization categories
c_prep5$water <- c_prep5$PROP11 + c_prep5$PROP12 #open water & ice
c_prep5$developed <- c_prep5$PROP21 + c_prep5$PROP22 + c_prep5$PROP23 + c_prep5$PROP24
c_prep5$barren <- c_prep5$PROP31
c_prep5$forest <- c_prep5$PROP41 + c_prep5$PROP42 + c_prep5$PROP43 # decidious, evergreen, mixed
c_prep5$shrubland <- c_prep5$PROP52 #shrub
c_prep5$herbaceous <- c_prep5$PROP71 #sedge
c_prep5$planted <- c_prep5$PROP81 + c_prep5$PROP82 #pasture, crops
c_prep5$wetlands <- c_prep5$PROP90 + c_prep5$PROP95 #woody, emergeny herbaceous

# 3/5/23 comment out this section; moving to national view
# #filter on target regions only
# c_prep4<-c_prep3%>%
#   filter(reg_names%in%c("W","SE","OV","NW"))

# load the NLCD legend from FedData package
legend<-pal_nlcd()
variable<-paste("PROP",legend$ID,sep="")
legend_box<-cbind(legend,variable)

#reshape for box plots
US_box1<-subset(c_prep5,select=c(1:2,48,65:73))

#careful of reshape2 warning
US_box1<-reshape2::melt(US_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR FIRST REGION################

#reshape for box plots
W_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("W"))

#careful of reshape2 warning
W_box2<-reshape2::melt(W_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR SECOND REGION################
#reshape for box plots
SE_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("SE"))

#careful of reshape2 warning
SE_box2<-reshape2::melt(SE_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR THIRD REGION################
#reshape for box plots
OV_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("OV"))

#careful of reshape2 warning
OV_box2<-reshape2::melt(OV_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR FOURTH REGION################
#reshape for box plots
NW_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("NW"))

#careful of reshape2 warning
NW_box2<-reshape2::melt(NW_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR FIFTH REGION################
#reshape for box plots
NR_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("NR"))

#careful of reshape2 warning
NR_box2<-reshape2::melt(NR_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR SIXTH REGION################
#reshape for box plots
UM_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("UM"))

#careful of reshape2 warning
UM_box2<-reshape2::melt(UM_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR SEVENTH REGION################
#reshape for box plots
NE_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("NE"))

#careful of reshape2 warning
NE_box2<-reshape2::melt(NE_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR EIGHTH REGION################
#reshape for box plots
SW_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("SW"))

#careful of reshape2 warning
SW_box2<-reshape2::melt(SW_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

############REPEAT FOR NINTH REGION################
#reshape for box plots
S_box1<-subset(c_prep5,select=c(1:2,48,65:73))%>%
  filter(reg_names%in%c("S"))

#careful of reshape2 warning
S_box2<-reshape2::melt(S_box1,id.vars=c('cofips','NAME','reg_names'),measure.vars=c('water','developed','barren','forest','shrubland','herbaceous','planted','wetlands'))

###########PLOT ALL BOXES###############
#plot US Box Plot
plot_ridge_US <- ggplot(US_box1, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    # Create boxplot chart in ggplot2
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  labs(x = "Percent of County Total", y = "Land Cover Type") +
  ggtitle("Proportion of Land Cover by County", subtitle = "NLCD 2011")

#plot West Box Plot
plot_ridge_W <- ggplot(W_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    # Create boxplot chart in ggplot2
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("West", subtitle = "NLCD 2011")

#plot Southeast Box Plot
plot_ridge_SE <- ggplot(SE_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +  
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Southeast", subtitle = "NLCD 2011")

#plot Ohio Valley Box Plot
plot_ridge_OV <- ggplot(OV_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Ohio Valley", subtitle = "NLCD 2011")

#plot Northwest Box Plot
plot_ridge_NW <- ggplot(NW_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Northwest", subtitle = "NLCD 2011")

#plot South Box Plot
plot_ridge_S <- ggplot(S_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("South", subtitle = "NLCD 2011")

#plot UM Box Plot
plot_ridge_UM <- ggplot(UM_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Upper Midwest", subtitle = "NLCD 2011")

#plot SW Box Plot
plot_ridge_SW <- ggplot(SW_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Southwest", subtitle = "NLCD 2011")

#plot NR Box Plot
plot_ridge_NR <- ggplot(NR_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Northern Rockies", subtitle = "NLCD 2011")

#plot NE Box Plot
plot_ridge_NE <- ggplot(NE_box2, aes(x = value, y = variable, fill = factor(after_stat(quantile)))) +    
  stat_density_ridges(
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    quantiles = 4, quantile_lines = TRUE
  ) +
  scale_fill_viridis_d(name = "Quartiles") +
  ggtitle("Northeast", subtitle = "NLCD 2011")

#plot US total first
plot_ridge_US

```

```{r}
#| fig-width: 14
#| fig-height: 12
#| fig-cap: Figure 12; UPDATE CAPTION

#detail by region
grid.arrange(plot_ridge_NW, plot_ridge_W, plot_ridge_NR, plot_ridge_SW, plot_ridge_UM, plot_ridge_S, plot_ridge_OV, plot_ridge_SE, plot_ridge_NE,
             ncol = 3, nrow=3,
             top = textGrob("Proportion of Land Cover by County",gp=gpar(fontsize=18,font=3)),
             left = textGrob("Land Cover Type",rot = 90,gp=gpar(fontsize=15,font=3)),
             bottom = textGrob("Percent of County Total",gp=gpar(fontsize=15,font=3))
             )
```

This research uses regression modeling on three NOAA climate regions to test if creating models for each region produces significant results. The region-based modeling using NOAA's climatically consistent region definitions draws from research on by Simon and colleagues. Simon and colleagues justify their use of NOAA climate regions by acknowledging that ozone patterns are partially determined by temperature and precipitation [-@simon2015, pp. 188]. Additionally, they note that climate regions generally group areas with similar emissions types and similar trends in temporal variation due to daylight and season [@simon2015, pp. 188]. By modeling for each region, I attempt to normalize out some of the variation due to climate, seasonality, and emissions type which should remove some noise from the models.

Calculating the entropy index: Let Pj be the percentage each of land use type j in the county, and let n be the number of land use types j.

$$ 
Entropy = 
-[\sum_{j=1}^n p_j \ln p_j]/ln(n)
$$

```{r}
#add entropy index
entropy <- aggregate(US_box1$value * log(US_box1$value), by = list(US_box1$cofips), FUN = sum)

colnames(entropy) <- c("cofips","entropy_prep")
entropy$entropy <- (entropy$entropy_prep *-1) / log(8)
entropy<-entropy[,-c(2)]

#merge entropy index to cprep
c_prep6 <- left_join(c_prep5,entropy, by = "cofips")

#plot entropy
c_prep6%>%
  mutate(entropy= cut(entropy, breaks=quantile(entropy, p=seq(0,1,length.out = 6), na.rm=T ), include.lowest=T ))%>%
  ggplot()+geom_sf(aes(fill=entropy,color=NA))+
  scale_colour_viridis_d()+
  scale_fill_viridis_d(option = "cividis",direction = -1, na.value="white")+
  scale_y_continuous(label=scales::comma)+
  geom_sf(data=sts, color="black")+
  ggtitle("Land Use Entropy Index by County", subtitle = "NLCD 2011")

```

Data are first approximated at a county level. Air quality data is captured by monitors, whose locations are indicated in the EPA's data files. In order to spread air quality metrics over space, spatial interpolation is used (add specifications). Land cover data is also approximated at the county level by using R to quantify the area of major land cover types that are measured in each county.REMOVE?

The dependent variable that is being used as a proxy for health is age-adjusted mortality rate for respiratory diseases. After a review of the dependent and independent variables, OLS regression models are consulted. The OLS regression model will estimate the effect of the independent variables on the dependent variable. Different combinations of variables are tested to evaluate what creates the best model, and results are evaluated for statistical significance.

A linear regression model is then evaluated for spatial autocorrelation. The regression model depends on independence and heteroskedasticity of residuals. If spatial autocorrelation is present, then both rules are broken. Spatial autocorrelation is tested using the Global Moran's I test, followed by mapping the Local Moran's I. Spatial clustering is revealed by the Local Indicator of Spatial Association (LISA) map. The Lagrange Multiplier test is consulted to determine if spatial error or spatial lag is driving spatial autocorrelation in the model. Based on the Lagrange Multiplier results, the spatial \[lag/error\] model is used to try to produce a better model.

```{r}
#prep data 
health_c <- read_excel('data files/2016 county health v3.xlsx') 
c_prep7<-left_join(c_prep6,health_c, by="cofips") 
c_prep7<-subset(c_prep7,select=-c(74:75)) 

#drop unnecessary variables
c_df <- subset(c_prep7, select = -c(13:18,25:27,29:31,33:35,37:39,41:43,45:47,49:50,55:64))

#calculate percentages: demographic variables
c_df1 <- c_df%>%
  mutate(pct_white = c_df$estimate_tot_wht / c_df$estimate_tot_pop)%>%
  mutate(pct_black = c_df$estimate_tot_blk / c_df$estimate_tot_pop)%>%
  mutate(pct_hispanic = c_df$estimate_tot_his / c_df$estimate_tot_pop)%>%
  mutate(pct_lessHS = c_df$estimate_tot_LessthanHS / c_df$estimate_tot_pop)%>%
  mutate(pct_HS = c_df$estimate_tot_HS / c_df$estimate_tot_pop)%>%
  mutate(pct_college = c_df$estimate_tot_somecollege / c_df$estimate_tot_pop)%>%
  mutate(pct_bach = c_df$estimate_tot_bach / c_df$estimate_tot_pop)%>%
  mutate(pct_pov = c_df$estimate_tot_pov / c_df$estimate_tot_pop)%>%
  rename(pct_smokers = '% Smokers')%>%
  rename(pct_obese = '% Obese')%>%
  rename(pct_uninsured = '% Uninsured')%>%
  rename(pct_rural = '% Rural')
  
c_df1 <- subset(c_df1,select=-c(4:11))


# prep data for OLS model
#removed rural... too many NAs... is there another source?
#removing items not needed in model A & filter complete cases
c_df2_a <-subset(c_df1,select=-c(2:5,7,9:10,13:28,33,37:39))%>%
    filter(complete.cases(AAMR_all_ICDI_use,pct_white,pct_black,pct_hispanic,pct_bach,pct_pov,PM2.5,pct_smokers,pct_obese,pct_uninsured,entropy,HDD,PCP))

 #removing items not needed in model B & filter complete cases                              
c_df2_b <-subset(c_df1,select=-c(2:6,9:10,13:28,33,37:39))%>%
    filter(complete.cases(AAMR_all_ICDI65_use,pct_white,pct_black,pct_hispanic,pct_bach,pct_pov,PM2.5,pct_smokers,pct_obese,pct_uninsured,entropy,HDD,PCP))

#remove geometry
c_df3_a <- c_df2_a%>%
  st_set_geometry(NULL)

c_df3_b <- c_df2_b%>%
  st_set_geometry(NULL)

#remove the county fips prior to scaling
c_df4_a <-subset(c_df3_a,select=-c(1))
c_df4_b <-subset(c_df3_b,select=-c(1))

#scale the dataframes 
c_df5_a <-scale(c_df4_a)
c_df5_b <-scale(c_df4_b)

#bind back to county data
c_df6_a <-as.data.frame(cbind(c_df3_a$cofips,c_df5_a))
c_df6_b <-as.data.frame(cbind(c_df3_b$cofips,c_df5_b))

#ensure numeric
c_df6_a[]<-lapply(c_df6_a,as.numeric)
c_df6_b[]<-lapply(c_df6_b,as.numeric)

#OLS model A
fit_c_df_a<- lm(AAMR_all_ICDI_use ~ pct_white + pct_black + pct_hispanic + pct_bach + pct_pov + PM2.5 + pct_smokers + pct_obese + pct_uninsured + entropy + HDD + PCP, data = c_df6_a)

# #OLS model B
fit_c_df_b<- lm(AAMR_all_ICDI65_use ~ pct_white + pct_black + pct_hispanic + pct_bach + pct_pov + PM2.5 + pct_smokers + pct_obese + pct_uninsured + entropy + HDD + PCP, data = c_df6_b)

summary(fit_c_df_a)
summary(fit_c_df_b)

# #transform to spatial polygon
df_1_as<-as_Spatial(c_df2_a)
df_1_bs<-as_Spatial(c_df2_b)

#WEIGHTS MATRICES A
# Create the K=4 spatial weights matrix
coords_a4 <- coordinates(df_1_as)
col.knn_a4 <- knearneigh(coords_a4, k = 4, longlat = T)
df_1a_wt4 <- nb2listw(knn2nb(col.knn_a4), style = "W")

# Create the K=6 spatial weights matrix
coords_a6 <- coordinates(df_1_as)
col.knn_a6 <- knearneigh(coords_a6, k = 6, longlat = T)
df_1a_wt6 <- nb2listw(knn2nb(col.knn_a6), style = "W")

# Create the K=10 spatial weights matrix
coords_a10 <- coordinates(df_1_as)
col.knn_a10 <- knearneigh(coords_a10, k = 10, longlat = T)
df_1a_wt10 <- nb2listw(knn2nb(col.knn_a10), style = "W")

lm.morantest(fit_c_df_a, listw = df_1a_wt4)
lm.morantest(fit_c_df_a, listw = df_1a_wt6)
lm.morantest(fit_c_df_a, listw = df_1a_wt10)

#WEIGHTS MATRICES B
# Create the K=4 spatial weights matrix
coords_b4 <- coordinates(df_1_bs)
col.knn_b4 <- knearneigh(coords_b4, k = 4, longlat = T)
df_1b_wt4 <- nb2listw(knn2nb(col.knn_b4), style = "W")

# Create the K=6 spatial weights matrix
coords_b6 <- coordinates(df_1_bs)
col.knn_b6 <- knearneigh(coords_b6, k = 6, longlat = T)
df_1b_wt6 <- nb2listw(knn2nb(col.knn_b6), style = "W")

# Create the K=10 spatial weights matrix
coords_b10 <- coordinates(df_1_bs)
col.knn_b10 <- knearneigh(coords_b10, k = 10, longlat = T)
df_1b_wt10 <- nb2listw(knn2nb(col.knn_b10), style = "W")

lm.morantest(fit_c_df_b, listw = df_1b_wt4)
lm.morantest(fit_c_df_b, listw = df_1b_wt6)
lm.morantest(fit_c_df_b, listw = df_1b_wt10)

#Mapping Model Residuals - Model A
c_df2_a$rstudent <- rstudent(fit_c_df_a)

c_df2_a%>%
  ggplot(aes(fill = rstudent)) + 
  geom_sf() +
  ggtitle(label = "Distribution of Model Residuals", subtitle = "US Counties") + 
  theme(legend.position = "bottom") + 
  scale_fill_viridis_c(, direction = -1) + theme(legend.key.width = unit(0.5,"in"))

# Plot the Moran Statistic for the Residuals!
# df_2_wtr <- nb2listw(df_2.nbr, style = "W")

#Local Moran Cluster Map -- model residuals
locali_r <- localmoran(c_df2_a$rstudent, listw = df_1a_wt6, alternative = "two.sided" )
c_df2_a$locali_r <- locali_r[,1]
c_df2_a$localp_r <- locali_r[,5]

c_df2_a$sinc_r <- scale(c_df2_a$rstudent)
c_df2_a$lag_inc_r <- lag.listw(var=c_df2_a$sinc_r, x = df_1a_wt6)
c_df2_a$quad_sig_r <- NA
c_df2_a$quad_sig_r[(c_df2_a$sinc_r >= 0 & c_df2_a$lag_inc_r >= 0) & (c_df2_a$localp_r <= 0.05)] <- 1
c_df2_a$quad_sig_r[(c_df2_a$sinc_r <= 0 & c_df2_a$lag_inc_r <= 0) & (c_df2_a$localp_r <= 0.05)] <- 2
c_df2_a$quad_sig_r[(c_df2_a$sinc_r >= 0 & c_df2_a$lag_inc_r <= 0) & (c_df2_a$localp_r <= 0.05)] <- 3
c_df2_a$quad_sig_r[(c_df2_a$sinc_r >= 0 & c_df2_a$lag_inc_r <= 0) & (c_df2_a$localp_r <= 0.05)] <- 4
c_df2_a$quad_sig_r[(c_df2_a$sinc_r <= 0 & c_df2_a$lag_inc_r >= 0) & (c_df2_a$localp_r <= 0.05)] <- 5  

#assign breaks for the thematic map classes

breaks <- seq(1, 5, 1)
np_r <- findInterval(c_df2_a$quad_sig_r, breaks)

# Assign colors

labels <- c("High-High", "Low-Low", "High-Low", "Low-High", "Not Clustered")
colors <- c("red", "blue", "lightpink", "skyblue2", "white")

plot(c_df2_a['rstudent'], col = colors[np_r], main="Moran LISA Cluster Map - Model Residuals (KNN = 6)")
legend("topright", legend = labels, fill = colors, bty = "n")

#Mapping Model Residuals - Model B
c_df2_b$rstudent <- rstudent(fit_c_df_b)

c_df2_b%>%
  ggplot(aes(fill = rstudent)) + 
  geom_sf() +
  ggtitle(label = "Distribution of Model Residuals", subtitle = "US Counties") + 
  theme(legend.position = "bottom") + 
  scale_fill_viridis_c(, direction = -1) + theme(legend.key.width = unit(0.5,"in"))

# Plot the Moran Statistic for the Residuals!
# df_2_wtr <- nb2listw(df_2.nbr, style = "W")

#Local Moran Cluster Map -- model residuals
locali_r <- localmoran(c_df2_b$rstudent, listw = df_1b_wt6, alternative = "two.sided" )
c_df2_b$locali_r <- locali_r[,1]
c_df2_b$localp_r <- locali_r[,5]

c_df2_b$sinc_r <- scale(c_df2_b$rstudent)
c_df2_b$lag_inc_r <- lag.listw(var=c_df2_b$sinc_r, x = df_1b_wt6)
c_df2_b$quad_sig_r <- NA
c_df2_b$quad_sig_r[(c_df2_b$sinc_r >= 0 & c_df2_b$lag_inc_r >= 0) & (c_df2_b$localp_r <= 0.05)] <- 1
c_df2_b$quad_sig_r[(c_df2_b$sinc_r <= 0 & c_df2_b$lag_inc_r <= 0) & (c_df2_b$localp_r <= 0.05)] <- 2
c_df2_b$quad_sig_r[(c_df2_b$sinc_r >= 0 & c_df2_b$lag_inc_r <= 0) & (c_df2_b$localp_r <= 0.05)] <- 3
c_df2_b$quad_sig_r[(c_df2_b$sinc_r >= 0 & c_df2_b$lag_inc_r <= 0) & (c_df2_b$localp_r <= 0.05)] <- 4
c_df2_b$quad_sig_r[(c_df2_b$sinc_r <= 0 & c_df2_b$lag_inc_r >= 0) & (c_df2_b$localp_r <= 0.05)] <- 5  

#assign breaks for the thematic map classes

breaks <- seq(1, 5, 1)
np_r <- findInterval(c_df2_b$quad_sig_r, breaks)

# Assign colors

labels <- c("High-High", "Low-Low", "High-Low", "Low-High", "Not Clustered")
colors <- c("red", "blue", "lightpink", "skyblue2", "white")

plot(c_df2_b['rstudent'], col = colors[np_r], main="Moran LISA Cluster Map 65+ - Model Residuals (KNN = 6)")
legend("topright", legend = labels, fill = colors, bty = "n")


```

```{r}
fit_df2_a_tests <- lm.LMtests(fit_c_df_a, listw = df_1a_wt6,test = c("LMerr", "LMlag", "RLMerr", "RLMlag") )
fit_df2_b_tests <- lm.LMtests(fit_c_df_b, listw = df_1b_wt6,test = c("LMerr", "LMlag", "RLMerr", "RLMlag") )

fit_df2_a_tests
fit_df2_b_tests

#higher value for Err than lag in both instances. Go with error model
fit_df2_a_err <- errorsarlm(AAMR_all_ICDI_use ~ pct_white + pct_black + pct_hispanic + pct_bach + pct_pov + PM2.5 + pct_smokers + pct_obese + pct_uninsured + entropy + HDD + PCP, data = c_df6_a, listw = df_1a_wt6)

fit_df2_b_err <- errorsarlm(AAMR_all_ICDI65_use ~ pct_white + pct_black + pct_hispanic + pct_bach + pct_pov + PM2.5 + pct_smokers + pct_obese + pct_uninsured + entropy + HDD + PCP, data = c_df6_b, listw = df_1b_wt6)

summary(fit_df2_a_err)
summary(fit_df2_b_err)

#evaluate compared to OLS model. Are Residual mean squared and AIC smaller? Smaller the better for both

```

------------------------------------------------------------------------
